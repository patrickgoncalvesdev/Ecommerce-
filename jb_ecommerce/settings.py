"""
Django settings for jb_ecommerce project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from ecommerce.repositories.mail_baby_api_repository import MailBabyAPIRepository
from ecommerce.repositories.mail_repository import SendEmailRepository
from ecommerce.repositories.sms_market_api_repository import SMSMarketAPIRepository
from django.contrib import messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-!#n78#!t9kkznss0di4+-4^o0m%x%q7)p^f5yzlqwrr1^8jvx8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:3030",
    "http://127.0.0.1:3030",
    "https://betapp-frontend.vercel.app",
    "https://jbteste.brazilsouth.cloudapp.azure.com",
    "http://jbteste.brazilsouth.cloudapp.azure.com",
    "http://127.0.0.1:1337",
    "http://localhost:1337"
]

CSRF_TRUSTED_ORIGINS = [
    "https://betapp-frontend.vercel.app",
    "https://jbteste.brazilsouth.cloudapp.azure.com",
    "http://jbteste.brazilsouth.cloudapp.azure.com",
    "http://127.0.0.1:1337",
    "http://localhost:1337"
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"


CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    # "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "crispy_forms",
    "crispy_bootstrap5",
    "rest_framework",
    "ecommerce",
    "rest_framework_simplejwt",
    "drf_yasg",
    "tinymce",
    "corsheaders",
    "django_extensions",
    "payment",
    "administration",
    "mptt",
    "django_filters",
]


# JAZZMIN_UI_TWEAKS = {
#     "theme": "flatly",
#     "dark_mode_theme": "darkly",
# }

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "ecommerce.middlewares.authentication.CustomJWTAuthentication",
        #'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

AUTH_USER_MODEL = "ecommerce.AdministrativeUser"

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(
        minutes=int(os.getenv("ACCESS_TOKEN_LIFETIME", 5))
    ),
    "REFRESH_TOKEN_LIFETIME": timedelta(
        days=int(os.getenv("REFRESH_TOKEN_LIFETIME", 1))
    ),
    "UPDATE_LAST_LOGIN": True,
}

MESSAGE_STORAGE = "django.contrib.messages.storage.cookie.CookieStorage"
MESSAGE_TAGS = {
    messages.DEBUG: "alert-info",
    messages.INFO: "alert-info",
    messages.SUCCESS: "alert-success",
    messages.WARNING: "alert-warning",
    messages.ERROR: "alert-danger",
}

ROOT_URLCONF = "jb_ecommerce.urls"


LOGIN_URL = "backoffice_login"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "administration/templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "jb_ecommerce.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("POSTGRES_NAME", "jb_ecommerce"),
        "USER": os.getenv("POSTGRES_USER", "postgres"),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD", "postgres"),
        "HOST": os.getenv("POSTGRES_HOST", "127.0.0.1"),
        "PORT": os.getenv("POSTGRES_PORT", 5432),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "pt-br"

USE_I18N = True

TIME_ZONE = "America/Sao_Paulo"

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

EXPIRATION_TIME = int(os.getenv("EXPIRATION_TIME", 5))

EXPIRATION_TIME = int(os.getenv("EXPIRATION_TIME", 5))

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
        },
    },
}

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": os.getenv("REDIS_URL", "redis://localhost:6379"),
        "TIMEOUT": 60 * 60 * 24,
    }
}


EMAIL_DOMAIN = os.getenv("EMAIL_DOMAIN", "https://api.mailbaby.net")
EMAIL_API_KEY = os.getenv(
    "EMAIL_API_KEY",
    "mQrI6VD4k4WwxFByuA8NMml5oxxGhYkEmhEEUpUrNyqYOuJ5npjNDN424Wd8FgaVlTW5OoDOFIK8xZQvR6Y7ZtoSSzuUSDCA4Vn4jcjQynaH2xSId85bcikJ86iEgMqs",
)
EMAIL_FROM = os.getenv("EMAIL_FROM", "janedoe@company.com")

EMAIL_BACKEND = (
    "django.core.mail.backends.console.EmailBackend"
    if DEBUG
    else "django.core.mail.backends.smtp.EmailBackend"
)
EMAIL_HOST = os.getenv("EMAIL_HOST", "relay.mailbaby.net")
EMAIL_USE_TLS = True
# EMAIL_PORT = int(os.getenv("EMAIL_PORT"))
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
MAIL_REPOSITORY = MailBabyAPIRepository(EMAIL_API_KEY, EMAIL_DOMAIN, EMAIL_FROM)

SMSMARKET_USERNAME = os.getenv("SMSMARKET_USERNAME")
SMSMARKET_PASSWORD = os.getenv("SMSMARKET_PASSWORD")
SMSMARKET_BASE_URL = os.getenv("SMSMARKET_BASE_URL")
SMS_REPOSITORY = SMSMarketAPIRepository(
    SMSMARKET_USERNAME, SMSMARKET_PASSWORD, SMSMARKET_BASE_URL
)
